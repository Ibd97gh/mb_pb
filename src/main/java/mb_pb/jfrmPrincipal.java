/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mb_pb;

import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import org.apache.solr.client.solrj.SolrClient;
import org.apache.solr.client.solrj.SolrQuery;
import org.apache.solr.client.solrj.SolrQuery.ORDER;
import org.apache.solr.client.solrj.SolrServerException;
import org.apache.solr.client.solrj.impl.HttpSolrClient;
import org.apache.solr.client.solrj.response.QueryResponse;
import org.apache.solr.common.SolrDocument;
import org.apache.solr.common.SolrDocumentList;

/**
 *
 * @author Manuel
 */
public class jfrmPrincipal extends javax.swing.JFrame {
    /**
     * Creates new form jfrmPrincipal
     */
    public jfrmPrincipal(org.apache.solr.client.solrj.SolrQuery solrQuery) {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtxtColeccion = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtxtSearchString = new javax.swing.JTextField();
        jbtnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtxaResults = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Colecci√≥n:");

        jtxtColeccion.setText("micoleccion");

        jLabel2.setText("Cadena a buscar:");

        jtxtSearchString.setText("name:Amazon*");

        jbtnBuscar.setText("Buscar");
        jbtnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBuscarActionPerformed(evt);
            }
        });

        jtxaResults.setEditable(false);
        jtxaResults.setContentType("text/html");
        jScrollPane1.setViewportView(jtxaResults);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtColeccion, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jbtnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtxtSearchString, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 248, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxtColeccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtxtSearchString, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    String editResponseText(String queryText, SolrDocumentList articles){
        // dictionary
        HashMap<String, Boolean> queryDictionary = new HashMap();
        String processedQuery = queryText.replaceAll("[A-Za-z]+ *:", " "); // remove fields
        processedQuery = processedQuery.replaceAll("[^A-Za-z]", " ").strip(); // remove special chars
        processedQuery = processedQuery.replaceAll(" +", "").strip(); // remove multiple spaces
        for(String s: processedQuery.split(" ")){
            if(!s.isBlank()) queryDictionary.put(s, true);
        }
        
        // sort articles
        SolrDocument[] docs = new SolrDocument[articles.size()];
        for(int i = 0; i < docs.length; i++){
            docs[i] = articles.get(i);
        }
        for(int i = 0; i < docs.length; i++){
            float maxscore = Float.parseFloat(docs[i].get("score").toString());
            int pmax = i;
            for(int j = i+1; j < docs.length; j++){
                float scorej = Float.parseFloat(docs[j].get("score").toString());
                if(scorej > maxscore){
                    pmax = j;
                    maxscore = scorej;
                }
            }
            SolrDocument aux = docs[i];
            docs[i] = docs[pmax];
            docs[pmax] = aux;
        }
        
        // write html
        String text = "";
        for(int i = 0; i < docs.length; i++){
            String articleText = "";
            articleText += addTag(docs[i].get("title").toString(), "p", "");
            articleText += addTag(docs[i].get("author").toString(), "p", "");
            if(i == 0){
                articleText += addTag(docs[i].get("text").toString(), "p", "");
            }
            for(String s: queryDictionary.keySet()){
                articleText = articleText.replaceAll(s, "<b>" + s.toUpperCase() + "</b>");
            }
            text += articleText + "_____<br>";
        }
        text = addTag(text, "body", "");
        text = addTag(text, "html", "");
        
        return text;
    }
    
    String addTag(String text, String tag, String attributes){
        return "<" + tag + " " + attributes + ">" + text + "</" + tag + ">";
    }
    
    private void jbtnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBuscarActionPerformed
            final String SOLR_CORE_URL = "http://localhost:8983/solr/" + jtxtColeccion.getText();
            final SolrClient solrClient = getSolrClient(SOLR_CORE_URL);
        
            SolrQuery solrQuery = new SolrQuery();
            jtxaResults.setText("");
            String queryText = jtxtSearchString.getText();
            
            solrQuery.setQuery(queryText);
            solrQuery.setRows(10);
            solrQuery.addField("score");
            solrQuery.addField("title");
            solrQuery.addField("author");
            solrQuery.addField("text");
            
            // sends search request and gets the response
            QueryResponse response = null;
            try {
                response = solrClient.query(solrQuery);
            } catch (SolrServerException | IOException e) {
                System.err.printf("Failed to search articles: %s", e.getMessage());
            }
            // converts to domain objects and prints to standard output
            if (response != null) {
                SolrDocumentList articles = response.getResults();
                String responseText = editResponseText(queryText, articles);
                jtxaResults.setText(responseText);
            }
            
    }//GEN-LAST:event_jbtnBuscarActionPerformed

    private static SolrClient getSolrClient(String core_url ) {
        return new HttpSolrClient.Builder(core_url).withConnectionTimeout(5000).withSocketTimeout(3000).build();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jfrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jfrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jfrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jfrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                 
                new jfrmPrincipal(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnBuscar;
    private javax.swing.JTextPane jtxaResults;
    private javax.swing.JTextField jtxtColeccion;
    private javax.swing.JTextField jtxtSearchString;
    // End of variables declaration//GEN-END:variables
}
